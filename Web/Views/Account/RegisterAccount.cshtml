@model Application.DTOs.UserDto

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create User</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .form-container {
            max-width: 500px;
            margin: 50px auto;
            padding: 30px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .form-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .btn-primary {
            width: 100%;
        }

        /* Toast notification */
        #toast {
            visibility: hidden;
            min-width: 250px;
            margin-left: -125px;
            background-color: #333;
            color: #fff;
            text-align: center;
            border-radius: 8px;
            padding: 16px;
            position: fixed;
            z-index: 9999;
            left: 50%;
            bottom: 30px;
            font-size: 16px;
            transition: opacity 0.5s ease-in-out;
            opacity: 0;
        }

            #toast.show {
                visibility: visible;
                opacity: 1;
            }


        .error-list {
            color: #dc3545;
            margin-top: 15px;
            padding: 10px;
            border-radius: 5px;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            display: none;
        }

            .error-list ul {
                margin-bottom: 0;
                padding-left: 20px;
            }
    </style>
</head>
<body>

    <div class="form-container">
        <h2 class="form-header">Register Account</h2>

        <!-- Error message container -->
        <div id="errorContainer" class="error-list">
            <strong>Please fix the following errors:</strong>
            <ul id="errorList"></ul>
        </div>

        <form id="userForm">
            <div class="form-group">
                <label asp-for="Username"></label>
                <input asp-for="Username" class="form-control" id="Username" placeholder="Enter your username" />
                <span asp-validation-for="Username" class="text-danger error-message" id="usernameError"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" id="Email" placeholder="Enter your email" />
                <span asp-validation-for="Email" class="text-danger error-message" id="emailError"></span>
            </div>

            <div class="form-group">
                <label asp-for="Password"></label>
                <input asp-for="Password" type="password" class="form-control" id="Password" placeholder="Enter your password" />
                <span asp-validation-for="Password" class="text-danger error-message" id="passwordError"></span>
            </div>

            <button type="submit" class="btn btn-primary">Create <i class="fas fa-user-plus"></i></button>
        </form>
    </div>

    <!-- Toast Notification -->
    <div id="toast"></div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        function showToast(message, isSuccess = true) {
            const toast = document.getElementById('toast');
            toast.innerText = message;
            toast.style.backgroundColor = isSuccess ? '#28a745' : '#dc3545';
            toast.className = 'show';
            setTimeout(() => {
                toast.className = toast.className.replace('show', '');
            }, 3000);
        }

        function displayErrors(errors) {
            // Clear inline field errors
            document.querySelectorAll('.error-message').forEach(el => el.textContent = '');

            // Error summary container
            const errorContainer = document.getElementById('errorContainer');
            const errorList = document.getElementById('errorList');
            errorList.innerHTML = '';
            errorContainer.style.display = 'none';

            if (errors && typeof errors === 'object') {
                for (const key in errors) {
                    if (errors.hasOwnProperty(key)) {
                        // Append to summary
                        errors[key].forEach(msg => {
                            const li = document.createElement('li');
                            li.textContent = msg;
                            errorList.appendChild(li);
                        });

                        // Inline field display
                        const fieldError = document.getElementById(key.toLowerCase() + 'Error');
                        if (fieldError) {
                            fieldError.textContent = errors[key][0];
                        }
                    }
                }

                errorContainer.style.display = 'block';
            }
        }

        document.getElementById("userForm").addEventListener("submit", function (e) {
            e.preventDefault();

            document.getElementById('errorContainer').style.display = 'none';

            const user = {
                username: document.getElementById("Username").value,
                email: document.getElementById("Email").value,
                password: document.getElementById("Password").value
            };

            fetch("/api/register", {
                method: "POST",
                body: JSON.stringify(user),
                headers: { "Content-Type": "application/json" }
            })
            .then(async response => {
                const data = await response.json();
                console.log(data.toString);
                if (!response.ok) {
                    if (data.errors) {
                        displayErrors(data.errors);
                        
                    } else {
                        showToast(data.title || "Đã xảy ra lỗi không xác định.", false);
                    }
                    return;
                }

         if (data.success) {
            showToast("User created successfully!", true);
            setTimeout(() => {
                window.location.href = '/Account/LoginAccount';
            }, 1500);
        }
            })
            .catch(error => {
                console.error("Request error:", error);
                showToast("Lỗi kết nối đến máy chủ.", false);
            });
        });
    </script>


</body>
</html>